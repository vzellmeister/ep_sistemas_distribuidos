# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import analyzer_pb2 as analyzer__pb2


class AnalyzerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.score = channel.unary_unary(
        '/Analyzer/score',
        request_serializer=analyzer__pb2.Data.SerializeToString,
        response_deserializer=analyzer__pb2.Score.FromString,
        )


class AnalyzerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def score(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AnalyzerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'score': grpc.unary_unary_rpc_method_handler(
          servicer.score,
          request_deserializer=analyzer__pb2.Data.FromString,
          response_serializer=analyzer__pb2.Score.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Analyzer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
